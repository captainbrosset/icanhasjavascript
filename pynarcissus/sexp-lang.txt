(ARRAY-INIT val ...)
(ASSIGN var val)
(UPDATE op var val)
(BLOCK statement ...)
(BREAK [label])
(CONTINUE [label])
(CALL method args ...)
(CASE caselabel statement)
(GUARDED-CATCH var guard statement)
(CATCH var statement)
(COMMA statement statement)
(DEBUGGER)
(DEFAULT statement)
(DELETE statement)
(TYPEOF statement)
(NEW function args ...)
(UNARY-MINUS statement)
(NOT statement)
(VOID statement)
(BITWISE-NOT statement)
(UNARY-PLUS statement)
(DO-WHILE condition statement)
(ATTRIBUTE object attribute)
(DEF-FUNCTION (name args ...) statement)
(FUNCTION (args ...) statement)
(FOR setup condition update statement)
(FOR-IN iterator object statement)
(FOR-IN-VAR iterator object statement)
(TERNARY condition truestatement falsestatement)
(INITVAR var initializer)
(IF condition thenpart)
(IF-ELSE condition thenpart elsepart)
(POST-INCREMENT var)
(POST-DECREMENT var)
(INCREMENT var)
(DECREMENT var)
(ARRAY-INDEX array index)
(LABELED-STATEMENT label statement)
TRUE
FALSE
THIS
NULL
(OBJECT-INIT property ...)
(PROPERTY name value)
(PLUS arg1 arg2)
(LT arg1 arg2)
(EQ arg1 arg2)
(AND arg1 arg2)
(OR arg1 arg2)
(MINUS arg1 arg2)
(MUL arg1 arg2)
(LE arg1 arg2)
(NE arg1 arg2)
(STRICT-EQ arg1 arg2)
(DIV arg1 arg2)
(GE arg1 arg2)
(INSTANCEOF class obj)
(IN attribute obj)
(GT arg1 arg2)
(BITWISE-OR arg1 arg2)
(BITWISE-AND arg1 arg2)
(BITWISE-XOR arg1 arg2)
(STRICT-NE arg1 arg2)
(LSH arg1 arg2)
(RSH arg1 arg2)
(URSH arg1 arg2)
(MOD arg1 arg2)
(REGEXP regexp modifiers)
(RETURN value)
(SCRIPT statement ...)
(SWITCH discriminant cases ...)
(THROW statement)
(TRY-FINALLY try-statement catches ... finally-statement)
(TRY try-statement catches ...)
(VAR var ...)
(CONST var ...)
(WHILE condition statement)